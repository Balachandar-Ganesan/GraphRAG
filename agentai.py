# -*- coding: utf-8 -*-
"""AgentAI.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1o8qT08vrmww0pagQ_7ePKN5bZFuM9-r5
"""

!pip install crewAI

!pip install langchain_openai

from google.colab import userdata
import os
openai_api_key = userdata.get('OPENAI_API_KEY')
os.environ["OPENAI_API_KEY"] = openai_api_key
    # Then set it for the OpenAI library
import openai
#openai.api_key = openai_api_key
client = openai.OpenAI(api_key=openai_api_key)

from crewai import Agent

# Define a basic agent
general_agent = Agent(
    role='Movie  Agent',
    goal='Find Theaters to watch Movies requested by user with description',
    backstory='Need to find theaters where movies are screened.You can access information from https://in.bookmyshow.com/ and https://ticketnew.com/movies for schedule'
)

from crewai import Task

# Define a task for the agent
planning_task = Task(
    description='Find Theaters Near Cognizant Siruseri Chennai office where Tamil Movies are running currently',
    expected_output='List of Theaters and address with Movie Name,Next earliest Date where movie can be watched',
    agent=general_agent
)

from crewai import Crew, Process
from langchain_openai import ChatOpenAI
# Assemble the crew
crew = Crew(
    agents=[general_agent],
    tasks=[planning_task],
    process=Process.sequential,
    verbose=True
)
llm = ChatOpenAI(model="gpt-4-turbo-preview")



result = crew.kickoff()

# Display the final output
print(result)

!pip install 'crewai[tools]' tavily-python

from crewai_tools import TavilySearchTool

    # To search only on specific domains
tavily_tool_include = TavilySearchTool(
        include_domains=["https://in.bookmyshow.com/,https://ticketnew.com/movies/chennai"]
    )

    # To exclude specific domains from the search
tavily_tool_exclude = TavilySearchTool(
        exclude_domains=["spam-site.net", "old-blog.info"]
    )

from crewai import Agent, Task, Crew
from crewai_tools import TavilySearchTool
import os

os.environ["TAVILY_API_KEY"] = ""


    # To search only on specific domains
tavily_tool_include = TavilySearchTool(
        include_domains=["https://in.bookmyshow.com/,https://ticketnew.com/movies/chennai"]
    )

    # To exclude specific domains from the search
tavily_tool_exclude = TavilySearchTool(
        exclude_domains=["spam-site.net", "old-blog.info"]
    )

MovieAgent = Agent(
        role='Theaters Researcher',
        goal='Find Currently Running Movies in Theaters.',
        backstory='Need to find theaters where movies are screened.You can access information from https://in.bookmyshow.com/ and https://ticketnew.com/movies for schedule.',
        tools=[tavily_tool_include], # Use the tool configured with include_domains
        verbose=True
    )

SearchTask = Task(
        description='Find Theaters Near Cognizant Siruseri Chennai office where Tamil Movies are running currently.',
        expected_output='List of Theaters and address with Movie Name,Review and Rating if possible ,Next earliest Date where movie can be watched in a CSV format',
        agent=MovieAgent
    )

crew = Crew(
        agents=[MovieAgent],
        tasks=[SearchTask],
        verbose=False
    )
result = crew.kickoff()
print(result)

!pip install autogen
!pip install autogen-agentchat~=0.2
!pip install pyautogen

import os
import autogen
import autogen_core
import autogen_agentchat
from autogen import AssistantAgent, UserProxyAgent

llm_config = {"model": "gpt-4", "api_key": os.environ["OPENAI_API_KEY"]}
assistant = AssistantAgent("assistant", llm_config=llm_config)

user_proxy = UserProxyAgent(
    "user_proxy", code_execution_config={"executor": autogen.coding.LocalCommandLineCodeExecutor(work_dir="coding")}
)

# Start the chat
user_proxy.initiate_chat(
    assistant,
    message="Find Theaters Near Cognizant Siruseri Chennai office where Tamil Movies are running currently.",
)

from crewai import Agent, Task, Crew
from crewai_tools import ScrapeElementFromWebsiteTool

element_scraper = ScrapeElementFromWebsiteTool()

data_extractor = Agent(
    role='Data Extractor',
    goal='Extract movie names,theater name, theater address',
    backstory='Focused expert who knows how to retrieve precise data from HTML.',
    tools=[element_scraper]
)

data_extraction_task = Task(
    description=(
        "1. Visit the page: https://ticketnew.com/movies/chennai"
        "2. Search for <h5> and </h5> and extract the text between it and this most likely the movie title"
        "3. Extract URLS like https://ticketnew.com/movies "
        "4. Get the list of theaters and address from above"
        "5. Share the information in bulletted list format"
    ),
    expected_output="Movie Name,Theater Address.",
    agent=data_extractor,
)

from crewai import Crew, Process

# (Code to define agents and tasks goes here)

my_crew = Crew(
    agents=[data_extractor],
    tasks=[data_extraction_task],
    process=Process.sequential,
)

# Kick off the crew with inputs
result = my_crew.kickoff(inputs={'news_url': 'https://ticketnew.com/movies/chennai'})

# Print the result
print(result)